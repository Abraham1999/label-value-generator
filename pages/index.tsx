import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useState } from 'react';
import { CopyToClipboard } from 'react-copy-to-clipboard';
import toast from 'react-hot-toast';

export default function Home() {
  const [textValue, setTextValue] = useState('');
  const [generatedValue, setGeneratedValue] = useState(Array);

  const onSubmit = () => {
    const convertToArray = textValue.split(/\r?\n/);
    setGeneratedValue(convertToArray);
  };

  let formattedValues = [];
  for (const value of generatedValue) {
    formattedValues.push(`{ label: ${value}, value: ${value} },`);
  }

  const copyText =
    formattedValues.length === 0 ? ' ' : '[' + formattedValues.toString() + ']';

  return (
    <div className='bg-black'>
      <Head>
        <title>Label Value Array Generator</title>
        <meta name='description' content='Generated by Kolawole Abraham' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='max-w-5xl mx-auto py-12'>
        <h1 className='text-5xl font-extrabold text-white text-center py-12'>
          Welcome to Label Value Array Generator!
        </h1>

        <p className='text-lg text-white text-center py-8'>
          Get started by pasting the text that should be converted
        </p>

        <div>
          <label
            htmlFor='comment'
            className='block text-sm font-medium text-white'
          >
            Split text by new line
          </label>
          <div className='mt-1'>
            <textarea
              rows={9}
              name='comment'
              id='comment'
              className='px-2 py-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'
              defaultValue={''}
              onChange={(e) => setTextValue(e.target.value)}
            />
          </div>
        </div>
        <div className='py-8 mb-12'>
          <button
            type='button'
            onClick={onSubmit}
            className='float-right rounded border border-gray-300 bg-white px-4 py-2.5 text-md font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'
          >
            Submit
          </button>
        </div>

        <div className=''>
          <p className='text-lg text-white text-center py-8'>
            Generated Label - Value Array
          </p>
        </div>
        <div className=''>
          <CopyToClipboard
            text={copyText}
            onCopy={() => toast.success('Copied')}
          >
            <svg
              xmlns='http://www.w3.org/2000/svg'
              className='cursor-pointer block bg-gray-100 rounded-full p-2 h-8 w-8 text-black float-right'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
              strokeWidth={2}
            >
              <path
                strokeLinecap='round'
                strokeLinejoin='round'
                d='M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1'
              />
            </svg>
          </CopyToClipboard>
        </div>

        <div className='bg-[#222] px-6 py-6 mt-12 '>
          [
          {generatedValue.map((item, index) => (
            <p key={index}>{`{ label: ${item}, value: ${item} },`}</p>
          ))}
          ]{' '}
        </div>
      </div>

      <footer className='border-t'>
        <div className='mx-auto max-w-7xl overflow-hidden py-12 px-4 sm:px-6 lg:px-8'>
          <div className='flex text-center items-center justify-center mx-auto'>
            <span className='px-2'>Powered by </span>
            <Image
              src='/aka.png'
              alt='Abraham Kolawole'
              width={20}
              height={20}
            />{' '}
            <p className='px-2 underline'>
              <Link href='http://www.abrahamkolawole.com/' passHref={true}>
                Abraham Kolawole
              </Link>
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
}
